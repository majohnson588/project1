#define _GRT_SECURE_NO_WARNING 1

#include <studio.h>

c语言基础
int main ()
{
      int a = 0;
      ;//是语句-空语句
      
      return 0;
}

//结构体
//char int double...
//人 = 3.14
//‘w’
//书 - 复杂对象
//
//名字+身高+年龄+身份号码+...


if语句
Example 1 

int main()
{
    int age = 10;
    if(age<18)
         printf("未成年\n");
    else if(age>=18 && age<28）
         printf(“青年\n”)；
    else if(age>=28 && age<50)
         printf(“壮年\n”)；
    else if(age>=50 && age<90)
         printf("老年\n");
    else
         printf("永年\n");
    return 0;
}

Example 2
书写形式的对比

//代码1
if（condition）{
     return x;
}
return y;

//代码2
if（condition）{
     return x;
}
else
{
     return y;
}

//代码3
int num = 1;
if(num == 5) // "=="是相等,"="是赋值
{
    printf("hello\n");
}

//代码4
int num = 1;
if(5 == num) // "=="是相等,"="是赋值
{
    printf("hello\n");
}

Exercise 1:
打印1-100的奇数

Answer 1:
int main（）
{ 
int i = 1;
while(i <= 100)
    if(i%2 = 1)
        printf(“%d”，i);
    i++;
}

Answer 2:
int main（）
{ 
int i = 1;
while(i <= 100)
printf("%d", i);
i+ = 2;
}


switch语句
int main()
{
     int day = 0;
     int n = 1;
     scanf("%d",&day);
     switch(day)
     {
     case 1:
         printf("星期1\n");
         break;
     case 2:
         printf("星期2\n");
         break;
     case 3:
         printf("星期3\n");
         break;
     case 4:
         printf("星期4\n");
         break;
     case 5：
         printf("星期5\n");
         break;
     case 6：
         printf("星期6\n");
         break;
     case 7：
         printf("星期天\n");
         break;
     default:
         printf("超出范围”)；//超出1到7，默认执行此行
     }
return 0;
}


while语句

Example 1:
int main()
{
   int i = 1;
   
   while(i <= 10)
   {
        if(i == 5)//终止条件
            break;//永久跳出循环
        printf("%d",i);
        i++;
   }
   return 0;
}

Example 2:
int main()
{
   int i = 1;
   
   while(i <= 10)
   {
        if(i == 5)//返回条件
            comtinue;//本次重新循环
        printf("%d",i);
        i++;
   }
   return 0;
}

Example 3:
int main()
{
      int ch = 0;
      while(ch=getchar() != EOF)
      //EOF = end of files -> -1
      {
            putchar(ch);
      }
      returm 0;
}


getchar语句

Example1:
int main
{
int ret = 0;
int ch = 0;
char password[20] = [0];
printf("请输入密码");
scanf("%s",password);//输入密码并存放在数组中
//输入字符串后缓冲区还剩一个‘\n’
//读取一下‘\n’
     while((ch=getchar()) != '\n')
{
     ;
}
printf("请确认（Y/N）:>);
ret = getchar();//Y/N
if(ret == 'V')
{
     printf("确认成功\n");
}
else
{
     printf("放弃确认\n");
}
     return 0;
}

Example2:
int main()
{
     while((ch = getchar()) != EOF)
     {
           if(ch < '0' || ch > '9')
             continue;
           putchar(ch);
     }
     return 0;
}


for语句

Example1:
int main() 
{
    int i = 0;
    //初始化 判断    调整
    for(i=1; i<=10; i++)
    {
         if(i == 5)
              continue;//跳过5输出6,7,8,9，不会进入死循环
          printf("%d",i);
    }
    
    return 0;
}

Example2:
int main()
{
    int i = 0;
    int j = 0;
    
    for(i=0;i<10;i++)
    {
        for(j=0;j<10;j++)   //for语句的嵌套
        {
        printf("hehe\n");
        }
    }
    //10*10 == 100
    return 0;
}

Example3:
int main()
{
  int arr[10] = {1,2,3,4,5,6,7,8,9,10};
  int i = 0;
  //10次循环
  //10次打印
  //10个元素
    for(i=0;i<10;i++)
    {
        printf("%d",arr[i]);
    }
    
    return 0;
}
  
Example4:
int main()
{
int x,y;
for (x = 0,y = 0; x<2 && y<5; ++x, y++)//"&&"为逻辑与
{
      printf("hehe\n");
}
}

Exercise1
int main()
{
    int i = 0;
    int k = 0;
    for(i=0,k=0; k=0; i++,k++)
        k++;
    return 0;
}
Q:请问循环进行多少次
A:0次,k=0是赋值而不是条件

Exercise2
//求n的阶乘
int main()
{
   int i,s;
   int s = 1;
   scacnf("%d",&n);//不考虑溢出的情况
   for(i=1;i<n;i++)
   {
    s = i*s
   }
   printf("%d",s);
   return 0;
}

Exercise3
//对前n项的阶乘求和
A1:
int main()
{
   int i,s,n,n1  ;
   int s = 1;
   int sum;
   scacnf("%d",&n1);//不考虑溢出的情况
   for(n=1;n<=n1;n++)
   {
       ret = 1;    
       for(i=1;i<n;i++)
       {
        s = i*s;
       } 
       sum = sum + s;
   }
   printf("%d",s);
   return 0;
}

A2:
int main()
{
   int i,s,n;
   int s = 1;
   int sum;
   scacnf("%d",&n);//不考虑溢出的情况
   for(i=1;i<=n;i++)
   {
       s = i*s;
       sum = sum + s;
   }
   printf("%d",s);
   return 0;
}

do while语句
int main()
{
    int i = 1;
    do//至少执行一次
        {
          printf("%d",i);
          i++;
        }
        while(i<=10);
    
        return 0;
 }


