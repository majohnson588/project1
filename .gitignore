#define _GRT_SECURE_NO_WARNING 1

#include <studio.h>

c语言基础
int main ()
{
      int a = 0;
      ;//是语句-空语句
      
      return 0;
}

//结构体
//char int double...
//人 = 3.14
//‘w’
//书 - 复杂对象
//
//名字+身高+年龄+身份号码+...


if语句
Example 1 

int main()
{
    int age = 10;
    if(age<18)
         printf("未成年\n");
    else if(age>=18 && age<28）
         printf(“青年\n”)；
    else if(age>=28 && age<50)
         printf(“壮年\n”)；
    else if(age>=50 && age<90)
         printf("老年\n");
    else
         printf("永年\n");
    return 0;
}

Example 2
书写形式的对比

//代码1
if（condition）{
     return x;
}
return y;

//代码2
if（condition）{
     return x;
}
else
{
     return y;
}

//代码3
int num = 1;
if(num == 5) // "=="是相等,"="是赋值
{
    printf("hello\n");
}

//代码4
int num = 1;
if(5 == num) // "=="是相等,"="是赋值
{
    printf("hello\n");
}

Exercise 1:
//打印1-100的奇数

Answer 1:
int main（）
{ 
int i = 1;
while(i <= 100)
    {
    if(i%2 = 1)
        {
        printf(“%d”，i);
        }
    i++;
    }
return 0;
}

Answer 2:
int main（）
{ 
int i = 1;
while(i <= 100)
printf("%d", i);
i+ = 2;
}

Exercise2
//比较三个数的大小
int main()
{
//a中放最大值
//b次之
//c最小
int a,b,c;
scanf("%d %d %d",&a,&b,&c);
if(a<b)
      {
      int tem = a;
      a = b;
      b = tem;
      }
if(a<c)
      {
      int tem = a;
      a = c;
      c = tem;
      }
if(b<c)
      {
      int tem = b;
      b = c;
      c = tem;
      }
printf("%d %d %d",a,b,c);
return 0;
}
Exercise3:
//打印1到100中含9的数字并计算个数
int main()
{
int i;
int count = 0;
for(i=1;i<=100;i++)
     {
       if((i%10 == 9) || (i/10 == 9))
       {
       printf(" %d",i);
       count++;
       }
       if(i = 99)
       {
       count++;
       }
     }
printf("%d",count);
return 0;
}

switch语句
int main()
{
     int day = 0;
     int n = 1;
     scanf("%d",&day);
     switch(day)
     {
     case 1:
         printf("星期1\n");
         break;
     case 2:
         printf("星期2\n");
         break;
     case 3:
         printf("星期3\n");
         break;
     case 4:
         printf("星期4\n");
         break;
     case 5：
         printf("星期5\n");
         break;
     case 6：
         printf("星期6\n");
         break;
     case 7：
         printf("星期天\n");
         break;
     default:
         printf("超出范围”)；//超出1到7，默认执行此行
     }
return 0;
}

Exercise3:
//打印从1000年到2000年的闰年年份并计算数量
int main ()
{
int year，count;
for(year=1000;year<=2000;year++)
    //判断year是否为闰年
    //1.能被4整除且不能被100整除
    //2.能被400整除
    {
    if(year%4 == 0 && year%100 != 0)
    //也可以将“if”和“else if”合并写成if(year%4 == 0 && year%100 != 0)||year%400 == 0)
              { 
              printf("%d",year);
              count++;
              }
    else if(year%400 == 0)
              {
              printf("%d",year);
              count++;
              }
       
     }
printf("%d",count);
return 0;
}
Exercise4:
//求100到200的素数


while语句

Example 1:
int main()
{
   int i = 1;
   
   while(i <= 10)
   {
        if(i == 5)//终止条件
            break;//永久跳出循环
        printf("%d",i);
        i++;
   }
   return 0;
}

Example 2:
int main()
{
   int i = 1;
   
   while(i <= 10)
   {
        if(i == 5)//返回条件
            comtinue;//本次重新循环
        printf("%d",i);
        i++;
   }
   return 0;
}

Example 3:
int main()
{
      int ch = 0;
      while(ch=getchar() != EOF)
      //EOF = end of files -> -1
      {
            putchar(ch);
      }
      returm 0;
}
Exercise1:
//求24和18的最大公约数
int main()
{
int a = 24;
int b = 18;
int r = 0;
while(r=a%b)
    {
    a = b;
    b = r;
    }
printf("%d\n",b);
return 0;
}


getchar语句

Example1:
int main()
{
int ret = 0;
int ch = 0;
char password[20] = [0];
printf("请输入密码");
scanf("%s",password);//输入密码并存放在数组中
//输入字符串后缓冲区还剩一个‘\n’
//读取一下‘\n’
     while((ch=getchar()) != '\n')
{
     ;
}
printf("请确认（Y/N）:>);
ret = getchar();//Y/N
if(ret == 'V')
{
     printf("确认成功\n");
}
else
{
     printf("放弃确认\n");
}
     return 0;
}

Example2:
int main()
{
     while((ch = getchar()) != EOF)
     {
           if(ch < '0' || ch > '9')
             continue;
           putchar(ch);
     }
     return 0;
}


for语句

Example1:
int main() 
{
    int i = 0;
    //初始化 判断    调整
    for(i=1; i<=10; i++)
    {
         if(i == 5)
              continue;//跳过5输出6,7,8,9，不会进入死循环
          printf("%d",i);
    }
    
    return 0;
}

Example2:
int main()
{
    int i = 0;
    int j = 0;
    
    for(i=0;i<10;i++)
    {
        for(j=0;j<10;j++)   //for语句的嵌套
        {
        printf("hehe\n");
        }
    }
    //10*10 == 100
    return 0;
}

Example3:
int main()
{
  int arr[10] = {1,2,3,4,5,6,7,8,9,10};
  int i = 0;
  //10次循环
  //10次打印
  //10个元素
    for(i=0;i<10;i++)
    {
        printf("%d",arr[i]);
    }
    
    return 0;
}
  
Example4:
int main()
{
int x,y;
for (x = 0,y = 0; x<2 && y<5; ++x, y++)//"&&"为逻辑与
{
      printf("hehe\n");
}
}

Exercise1
int main()
{
    int i = 0;
    int k = 0;
    for(i=0,k=0; k=0; i++,k++)
        k++;
    return 0;
}
Q:请问循环进行多少次
A:0次,k=0是赋值而不是条件

Exercise2
//求n的阶乘
int main()
{
   int i,s;
   int s = 1;
   scacnf("%d",&n);//不考虑溢出的情况
   for(i=1;i<n;i++)
   {
    s = i*s;
   }
   printf("%d",s);
   return 0;
}

Exercise3
//对前n项的阶乘求和
A1:
int main()
{
   int i,s,n,n1  ;
   int s = 1;
   int sum;
   scacnf("%d",&n1);//不考虑溢出的情况
   for(n=1;n<=n1;n++)
   {
       ret = 1;    
       for(i=1;i<n;i++)
       {
        s = i*s;
       } 
       sum = sum + s;
   }
   printf("%d",s);
   return 0;
}

A2:
int main()
{
   int i,s,n;
   int s = 1;
   int sum;
   scacnf("%d",&n);//不考虑溢出的情况
   for(i=1;i<=n;i++)
   {
       s = i*s;
       sum = sum + s;
   }
   printf("%d",s);
   return 0;
}

Exercise4:
A1:
int main()
{
    int i = 0,count = 0;
    for(i=100;i<=200;i++)
    {
          //判断i是否为素数
          //素数判断的规则
          //1.试除法
          //产生2->i-1
        int j = 0;
        for(j=2;j<i;j++)
        {
               if(i%j == 0)
               {
                      break;
               }
         }
         if(j==i)
         {
             printf("%d", i);
             count++;
         }
   printf("count = %d",count);
   }
   
   A2:
   #include <math.h>
   int main()
   include
{
    int i = 0,count = 0;
    //sqrt - 开平方的数学库函数
    for(i=101;i<=200;i+=2)//优化算法，素数不可能为偶数
    {
          //判断i是否为素数
          //素数判断的规则
          //试除法；a和b 中至少有一个数字<=开平方i 
          //产生2->i-1
        int j = 0;
        for(j=2;j<sprt(i);j++)
        {
               if(i%j == 0)
               {
                      break;
               }
        }
         if(j>sqrt(i))
         {
             printf("%d", i);
             count++;
         }
   printf("count = %d",count);
   }
   
   
do while语句
int main()
{
    int i = 1;
    do//至少执行一次
        {
          printf("%d",i);
          i++;
        }
        while(i<=10);
    
        return 0;
 }
 
 array语句
 Example 1:
 int main()
 {
     int arr[] = {1,2,3,4,5,6,7,8,9,10};
     int k = 7;
     //写一个代码，在arr数组（有序的）中找到7
     int i = 0;
     int sz = sizeof(arr)/sizeof(arr[0]);
     for(i=0;i<sz;i++)
     {
             if(k = arr[i])
           {
                  printf("找到了，下标是：%d\n",i);
                  break;
           }
     }
 if(i == sz)
    {
    printf("找不到\n");
    }
return 0;
}

Example2:
int main
{
    int arr[] = {1,2,3,4,5,6,7,8,9,10};
    int k = 7;
    int sz = sizeof(arr)/sizeof(arr[0]);//计算元素个数
    int left = 0;//左下标
    int right = sz-1;//右下标
 while(left <= right) 
 {
    int mid =  (left+right)/2;
    if(arr[mid] > k)
    {
           right = mid - 1;
    }
    else if(arr[mid] < k)
    {
           left = mid - 1;
    }
    else
    {
           printf("找到了，下标是: %d\n", mid);
           break;
    }
  }
   if (left < right)
   {
       printf("找不到");
   } 
return 0;
}

Practise1:
int main()
{
   //编写代码以实现以下显示效果
   //####################
   //w##################!
   //we################!!
   //wel##############!!!
   //...
   //welcome to bit!!!!!!
   //
   char arr1[] = "welcome to bit!!!!!";
   char arr2[] = "###################";
   int left = 0;
   //int right = sizeof(arr)/sizeof(arr[0])-2;//err
   int right = strlen(arr1)-1;
   while(left <= right)
   {
       arr2[left] = arr1[left];
       arr2[right] = arr2[right];
       printf("%s\n", arr2);
       //休息一秒
       Sleep(1000);
       system("cls");//执行系统命令的一个函数-cls - 清空屏幕
       left++;
       right--;
   }
   printf("welcome to bit");
   return 0;
}

practise2:
int main（）
{
    int i = 0;
    char password[20] = {0};
    for(i=0; i<3; i++)
    {
          printf("请输入密码:>");
          scanf("%s", password);
          if(strcmp(password,"123456")= 0)//==不能用来比较两个字符串是否相等，应该使用一个库函数-strcmp
          {
               printf("登录成功\n");
               break;
          }
          else
          {    
               int m = 2-i;
               printf("登录失败，还剩%d次机会\n",m);
          }
     }
 if(i == 3)
     {
       printf("三次密码均错误，退出程序\n);
     }
return 0;
}


综合练习：
Practise1:
int main()
//求1/1-1/2+1/3-1/4+1/5...-1/100
{
double i;
int sym = 1;
for(i=1;i<=100;i++)
    {
     i = i + 1.0/i;
     sym = -sym;
    } 
return 0;
}

Practise2:
int main()
//求10个数的最大值
{
    int arr[] = {1,2,3,4,5,6,7,8,9,10};
    int max = arr[0];//最大值
    int sz = sizeof(arr[])/sizeof(arr[0]);
    for(i=0;i<sz;i++)
    {
    if(arr[i]>max)
          {
              max = arr[i];
          }
    }
    printf("max = %d\n", max);
    return 0;
}

Practise3:
//打印九九乘法口诀表
int main()
{
int i = 0;
int j = 0;
int k;
for(i=1;i<=9;i++)
   {
      for(j=1;j<=i;j++)
      {
      printf("%d*%d=%-2d ",i,j,k);
      printf("\n");
      }
   }
return 0;
}

Practise4:
设计一个1到100的猜字游戏
#include <stdlib.h>
#include <time.h>
#include <stdio.h>

void menu()
{
    printf("##################################\n");
    printf("####    1.play      0.exit    ####\n");
    printf("##################################\n");
}
void game()
{
int ret = 0;
int guess = 0;
ret = rand()%100-1;
while(1)
  {
       printf("请输数字:>");
       scanf("%d",&guess);
       if(guess>ret)
       {
              printf("猜大了\n");
       }
       else if(guess<ret)
       {
              printf("猜小了\n");
       }
       else
       {
              printf("恭喜你,猜中了\n");
              break;
       }
  } 
}
int main()
{
   int input = 0;
   srand((unsigned int)time(NULL));
   do
   {
       menu();
       printf("请选择>:");
       scanf("%d",&input);
       switch(input)
       {
      case 1:
           game();
           break;
      case 0:
           printf("退出游戏\n");
           break;
      default:
           printf("选择错误\n");
           break;
         }
     } while (input);
return 0;
}

Footer
© 2022 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Doc
